<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">


<!-- A FAIRE -->

<!-- 1. Ajouter dans le job les declarations des listeners qui assurent la tracabilite des exceptions rencontrees. -->

<!-- 2.A Police d'exception par configuration skip-limit -->
<!--  2.A.1 Ajouter dans le chunk un attribut skip-limit dans le chunk avec une valeur de 17500 -->
<!--  2.A.2 Declarer que l'exception TP4FiltreException est geré par cette police d'exception. -->

<!-- 2.B. Police d'exception par implementation skip-policy -->
<!--  2.B.1. Declarer un bean qui reference votre implementation java de gestion d'exception -->
<!--  2.B.2. Indiquer lui une limite maximum de skip avec une valeur par defaut à 10 000.  -->
<!-- 2.B.3. Ajouter dans le chunk un attribut skip-policy qui reference votre implementation de police d'exception. -->


	<!--********************************************************************************************** -->
	<!--******************************** Modular contexte ******************************************** -->
	<!--********************************************************************************************** -->
	<import resource="datasource/tp4.datasource.context.xml" />
	<import resource="step/tp4.reader.context.xml" />
	<import resource="step/tp4.process.context.xml" />
	<import resource="step/tp4.writer.context.xml" />
	<import resource="step/tp4.listener.context.xml" />

	<!--********************************************************************************************** -->
	<!--******************************** Job component *********************************************** -->
	<!--********************************************************************************************** -->
	<batch:job id="tp4JobID">
		<!-- ETAPE 1: insertion du fichier en base -->
		<batch:step id="tp4aStepID">
        <batch:description>etape de migration du fichier en base de donnée avec gestion d'exception</batch:description>
			<batch:tasklet>
				<batch:chunk reader="tp4ReaderID" processor="tp4ProcessorID"
					writer="tp4WriterID" commit-interval="${tp4JobID.tp4StepID.commit-interval:10}">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="tp4LauncherID"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
</beans>